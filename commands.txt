PS D:\HexProjects\hexlet-flask-example> wsl
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ psql -U cars_owner -d test_cars
Password for user cars_owner: 
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1))
Type "help" for help.

test_cars=> create table first(
test_cars(> id INTEGER primary key generated always as identity,
test_cars(> name VARCHAR(255))
test_cars-> ;
CREATE TABLE
test_cars=> drop table first;
DROP TABLE
test_cars=> \q
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ psql -U cars_owner -d test_cars
Password for user cars_owner: 
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1))
Type "help" for help.

test_cars=> \q
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ export DATABASE_URL="postgresql://cars_owner:password@localhost:5432/test_cars"
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ psql -a -d $DATABASE_URL -f init.sql
CREATE TABLE IF NOT EXISTS cars (
    id SERIAL PRIMARY KEY,
    manufacturer VARCHAR(255) NOT NULL,
    model VARCHAR(255) NOT NULL
);
CREATE TABLE
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ psql -U cars_owner -d test_cars
Password for user cars_owner: 
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1))
Type "help" for help.

test_cars=> SELECT * FROM cars;
 id | manufacturer | model 
----+--------------+-------
(0 rows)

test_cars=> \q
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ export DATABASE_URL="postgresql://cars_owner:password@localhost:5432/test_cars"
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ psql -a -d $DATABASE_URL -f init.sql
CREATE TABLE IF NOT EXISTS cars (
    id INTEGER primary key generated always as identity,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
);
psql:init.sql:5: NOTICE:  relation "cars" already exists, skipping
CREATE TABLE
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ psql -a -d $DATABASE_URL -f init.sql
CREATE TABLE IF NOT EXISTS users (
    id INTEGER primary key generated always as identity,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
);
CREATE TABLE
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ make start 
uv run flask --app example run --port 8000
Usage: flask run [OPTIONS]
Try 'flask run --help' for help.

Error: While importing 'example', an ImportError was raised:

Traceback (most recent call last):
  File "/mnt/d/HexProjects/hexlet-flask-example/.venv/lib/python3.12/site-packages/flask/cli.py", line 245, in locate_app
    __import__(module_name)
  File "/mnt/d/HexProjects/hexlet-flask-example/example.py", line 1, in <module>
    import psycopg2
ModuleNotFoundError: No module named 'psycopg2'

make: *** [Makefile:2: start] Error 2
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ uv add psycopg2
Resolved 15 packages in 729ms
  × Failed to build `psycopg2==2.9.10`
  ├─▶ The build backend returned an error
  ╰─▶ Call to `setuptools.build_meta:__legacy__.build_wheel` failed (exit status: 1)

      [stdout]
      running bdist_wheel
      running build
      running build_py
      copying lib/_json.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/pool.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/sql.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/extras.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/errors.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/extensions.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/__init__.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/errorcodes.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/_range.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/tz.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      copying lib/_ipaddress.py -> build/lib.linux-x86_64-cpython-312/psycopg2
      running build_ext
      building 'psycopg2._psycopg' extension
      x86_64-linux-gnu-gcc -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O2 -Wall -fPIC "-DPSYCOPG_VERSION=2.9.10 (dt dec pq3 ext lo64)"
      -DPSYCOPG_DEBUG=1 -DPG_VERSION_NUM=160010 -DHAVE_LO64=1 -DPSYCOPG_DEBUG=1 -I/home/cheshire/.cache/uv/builds-v0/.tmptNiI07/include
      -I/usr/include/python3.12 -I. -I/usr/include/postgresql -I/usr/include/postgresql/16/server -I/usr/include/libxml2 -c psycopg/adapter_asis.c -o
      build/temp.linux-x86_64-cpython-312/psycopg/adapter_asis.o -Wdeclaration-after-statement

      [stderr]
      /home/cheshire/.cache/uv/builds-v0/.tmptNiI07/lib/python3.12/site-packages/setuptools/dist.py:759: SetuptoolsDeprecationWarning: License classifiers      
      are deprecated.
      !!

              ********************************************************************************
              Please consider removing the following classifiers in favor of a SPDX license expression:

              License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)

              See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.
              ********************************************************************************

      !!
        self._finalize_license_expression()
      In file included from psycopg/adapter_asis.c:28:
      ./psycopg/psycopg.h:36:10: fatal error: libpq-fe.h: No such file or directory
         36 | #include <libpq-fe.h>
            |          ^~~~~~~~~~~~
      compilation terminated.

      It appears you are missing some prerequisite to build the package from source.

      You may install a binary package by installing 'psycopg2-binary' from PyPI.
      If you want to install psycopg2 from source, please install the packages
      required for the build and try again.

      For further information please check the 'doc/src/install.rst' file (also at
      <https://www.psycopg.org/docs/install.html>).

      error: command '/usr/bin/x86_64-linux-gnu-gcc' failed with exit code 1

      hint: This usually indicates a problem with the package or the build environment.
  help: If you want to add the package regardless of the failed resolution, provide the `--frozen` flag to skip locking and syncing.
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ make start
uv run flask --app example run --port 8000
Usage: flask run [OPTIONS]
Try 'flask run --help' for help.

Error: While importing 'example', an ImportError was raised:

Traceback (most recent call last):
  File "/mnt/d/HexProjects/hexlet-flask-example/.venv/lib/python3.12/site-packages/flask/cli.py", line 245, in locate_app
    __import__(module_name)
  File "/mnt/d/HexProjects/hexlet-flask-example/example.py", line 1, in <module>
    import psycopg2
ModuleNotFoundError: No module named 'psycopg2'

make: *** [Makefile:2: start] Error 2
cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ source .venv/bin/activate
(hexlet-flask-example) cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ 
(hexlet-flask-example) cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ pip install psycopg2-binary
error: externally-managed-environment

× This environment is externally managed
╰─> To install Python packages system-wide, try apt install
    python3-xyz, where xyz is the package you are trying to
    install.
   
    If you wish to install a non-Debian-packaged Python package,
    create a virtual environment using python3 -m venv path/to/venv.
    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make
    sure you have python3-full installed.
   
    If you wish to install a non-Debian packaged Python application,
    it may be easiest to use pipx install xyz, which will manage a
    virtual environment for you. Make sure you have pipx installed.
   
    See /usr/share/doc/python3.12/README.venv for more information.

note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.
hint: See PEP 668 for the detailed specification.
(hexlet-flask-example) cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ uv add psycopg2-binary
Resolved 15 packages in 367ms
░░░░░░░░░░░░░░░░░░░░ [0/1] Installing wheels...
warning: Failed to hardlink files; falling back to full copy. This may lead to degraded performance.
         If the cache and target directories are on different filesystems, hardlinking may not be supported.
         If this is intentional, set `export UV_LINK_MODE=copy` or use `--link-mode=copy` to suppress this warning.
Installed 1 package in 1.62s
 + psycopg2-binary==2.9.10
(hexlet-flask-example) cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ make start
uv run flask --app example run --port 8000
 * Serving Flask app 'example'
 * Debug mode: off
WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on http://127.0.0.1:8000
Press CTRL+C to quit
127.0.0.1 - - [17/Sep/2025 20:46:38] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:46:38] "GET /favicon.ico HTTP/1.1" 404 -
127.0.0.1 - - [17/Sep/2025 20:46:40] "GET /users/ HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:46:41] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:46:42] "GET /users/ HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:46:49] "GET /users/new HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:46:50] "GET /users/new HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:01] "POST /users HTTP/1.1" 302 -
127.0.0.1 - - [17/Sep/2025 20:47:01] "GET /users/ HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:03] "GET /users/1 HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:05] "GET /users/ HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:07] "GET /users/1 HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:14] "GET /users/1/edit HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:34] "POST /users/1/patch HTTP/1.1" 302 -
127.0.0.1 - - [17/Sep/2025 20:47:34] "GET /users/ HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:45] "GET /users/new HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:47] "GET /users/new HTTP/1.1" 200 -
127.0.0.1 - - [17/Sep/2025 20:47:53] "POST /users HTTP/1.1" 302 -
127.0.0.1 - - [17/Sep/2025 20:47:53] "GET /users/ HTTP/1.1" 200 -
^C
(hexlet-flask-example) cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$ psql -U cars_owner -d test_cars
Password for user cars_owner: 
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1))
Type "help" for help.

test_cars=> SELECT * FROM users;
 id |       name        |       email       
----+-------------------+-------------------
  1 | Tester_number_one | tester@gmail.com
  2 | Tester2           | tester2@gmail.com
(2 rows)

test_cars=> ^C
test_cars=> \й
invalid command \й
Try \? for help.
test_cars=> \q
(hexlet-flask-example) cheshire@DESKTOP-V7GCCME:/mnt/d/HexProjects/hexlet-flask-example$